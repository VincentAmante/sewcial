// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum EnumMaterial {
  chiffon
  cotton
  crepe
  denim
  lace
  leather
  linen
  satin
  silk
  synthetic
  velvet
  wool
}

enum Skill {
  beginner
  intermediate
  advanced
}

// schema.prisma
model Example {
  id      String @id @default(uuid())
  details String
}

model Author {
  firstName     String
  lastName      String
  templates     Template[]
  CatalogueItem CatalogueItem[]

  @@id([firstName, lastName], name: "authorName")
}

model Template {
  id                 String               @id @default(uuid())
  name               String
  description        String
  details            Json?
  priceAED           Float
  isFeatured         Boolean
  MaterialOnTemplate MaterialOnTemplate[]
  skill              Skill
  CategoryTag        TemplateCategoryTag? @relation(fields: [categoryTagId], references: [id])
  categoryTagId      String?
  thumbnail          String               @default("")
  templateImage      String               @default("")
  materialsRequired  Json?
  equipment          Json?
  assembly           Json?
  createdAt          DateTime             @default(now())
  Author             Author?              @relation(fields: [authorFirstName, authorLastName], references: [firstName, lastName])
  authorFirstName    String?
  authorLastName     String?

  @@index([authorFirstName, authorLastName])
  @@index([categoryTagId])
}

model TemplateCategoryTag {
  id       String     @id @default(uuid())
  name     String
  Template Template[]
}

model CatalogueItem {
  id                 String                     @id @default(uuid())
  name               String
  description        String
  imageSrc           String
  priceAED           Float
  isFeatured         Boolean                    @default(false)
  CategoryTag        CatalogueCategoryTag?      @relation(fields: [categoryTagName], references: [name])
  categoryTagName    String?
  sizingsData        Json?                      @default(dbgenerated())
  materials          MaterialOnCatalogueItems[]
  LikedCatalogueItem LikedCatalogueItem[]
  createdAt          DateTime                   @default(now())
  Author             Author?                    @relation(fields: [authorFirstName, authorLastName], references: [firstName, lastName])
  authorFirstName    String?                    @default("first name missing")
  authorLastName     String?                    @default("last name missing")

  @@index([authorFirstName, authorLastName])
  @@index([categoryTagName])
}

model MaterialOnCatalogueItems {
  id            String        @id @default(uuid())
  catalogueId   String
  catalogueItem CatalogueItem @relation(fields: [catalogueId], references: [id])
  materialName  EnumMaterial
  material      Material      @relation(fields: [materialName], references: [name])

  @@index([catalogueId])
  @@index([materialName])
}

model Material {
  name                     EnumMaterial               @id
  MaterialOnCatalogueItems MaterialOnCatalogueItems[]
  MaterialOnTemplate       MaterialOnTemplate[]
}

model MaterialOnTemplate {
  id           String       @id @default(uuid())
  templateId   String
  template     Template     @relation(fields: [templateId], references: [id])
  materialName EnumMaterial
  material     Material     @relation(fields: [materialName], references: [name])

  @@index([templateId])
  @@index([materialName])
}

model CatalogueCategoryTag {
  name           String          @id
  sizingFormat   Json?
  CatalogueItems CatalogueItem[]
}

model Event {
  id          String     @id @default(uuid())
  startTime   DateTime
  endTime     DateTime
  title       String
  description String
  thumbnail   String     @default("")
  details     Json?
  priceAED    Float      @default(0)
  Bookings    Bookings[]
}

model Workshop {
  id          String     @id @default(uuid())
  startTime   DateTime
  endTime     DateTime
  title       String
  thumbnail   String     @default("")
  skill       Skill
  priceAED    Float
  details     Json?
  totalSlots  Int
  bookedSlots Int?       @default(0)
  Bookings    Bookings[]
}

model ContactSubmission {
  id        String   @id @default(uuid())
  name      String
  email     String
  mobile    String
  message   String
  createdAt DateTime @default(now())
}

model User {
  id         String               @id @default(uuid())
  email      String               @unique
  createdAt  DateTime             @default(now())
  updatedAt  DateTime             @updatedAt
  likedItems LikedCatalogueItem[]
}

model LikedCatalogueItem {
  id              String        @id @default(uuid())
  user            User          @relation(fields: [userId], references: [id])
  userId          String
  catalogueItem   CatalogueItem @relation(fields: [catalogueItemId], references: [id])
  catalogueItemId String

  @@index([userId])
  @@index([catalogueItemId])
}

model Bookings {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  firstName  String
  lastName   String
  email      String
  mobile     String
  event      Event?    @relation(fields: [eventId], references: [id])
  eventId    String?
  workshop   Workshop? @relation(fields: [workshopId], references: [id])
  workshopId String?

  @@index([eventId])
  @@index([workshopId])
}
